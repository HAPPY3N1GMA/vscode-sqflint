{"load":{"id":"load","title":"Load","description":"Fires when UI container is created, but no action is taken. onLoad event for display fires  onLoad events for all controls it contains are fired.","args":"Returns the display or control.","scope":"Display, Control","type":"ui","priority":"1"},"unload":{"id":"unload","title":"Unload","description":"Display is closed, but no controls are destroyed yet.  onUnload event doesn't fire for RscTitles displays started with [cutRsc](/wiki/cutRsc)","args":"Returns the display and exit code.","scope":"Display","type":"ui","priority":"1"},"childdestroyed":{"id":"childdestroyed","title":"ChildDestroyed","description":"Child display is closed.","args":"Returns the display, which child display was closed and exit code.","scope":"Display","type":"ui","priority":"1"},"mouseenter":{"id":"mouseenter","title":"MouseEnter","description":"The mouse pointer enters the control area.","args":"Returns control.","scope":"Control","type":"ui","priority":"1"},"mouseexit":{"id":"mouseexit","title":"MouseExit","description":"The mouse pointer exits the control area.","args":"Returns control.","scope":"Control","type":"ui","priority":"1"},"setfocus":{"id":"setfocus","title":"SetFocus","description":"Input focus is on control. It now begins to accept keyboard input.","args":"Returns control.","scope":"Control","type":"ui","priority":"2"},"killfocus":{"id":"killfocus","title":"KillFocus","description":"Input focus is no longer on control. It no longer accepts keyboard input.","args":"Returns control.","scope":"Control","type":"ui","priority":"2"},"timer":{"id":"timer","title":"Timer","description":"After amount of time given by setTimer function.","args":"Returns control.","scope":"Control","type":"ui","priority":"3"},"keydown":{"id":"keydown","title":"KeyDown","description":"Pressing any keyboard key. Fired before the [onKeyUp](about:blank#onKeyUp) event.","args":"Returns the control, the [keyboard code](/wiki/DIK_KeyCodes) and the state of Shift, Ctrl and Alt.","scope":"Display, Control","type":"ui","priority":"2"},"keyup":{"id":"keyup","title":"KeyUp","description":"Releasing any keyboard key. Fired after the [onKeyDown](about:blank#onKeyDown) event.","args":"Returns the control, the [keyboard code](/wiki/DIK_KeyCodes) and the state of Shift, Ctrl and Alt.","scope":"Display, Control","type":"ui","priority":"2"},"char":{"id":"char","title":"Char","description":"When some readable characters is recognised.","args":"Returns the control and the char code.","scope":"Control","type":"ui","priority":"2"},"imechar":{"id":"imechar","title":"IMEChar","description":"When IME character is recognized (used in Korean and other eastern languages).","args":"Returns the control and the char code.","scope":"Control","type":"ui","priority":"2"},"imecomposition":{"id":"imecomposition","title":"IMEComposition","description":"When partial IME character is recognized (used in Korean and other eastern languages).","args":"Returns the control and the char code.","scope":"Control","type":"ui","priority":"2"},"joystickbutton":{"id":"joystickbutton","title":"JoystickButton","description":"Pressing and releasing any joystick button.","args":"Returns the control and the the pressed button.","scope":"Control","type":"ui","priority":"3"},"mousebuttondown":{"id":"mousebuttondown","title":"MouseButtonDown","description":"Pressing a mouse button. Followed by the [onMouseButtonUp](about:blank#onMouseButtonUp) event.","args":"Returns the control, the pressed button, the x and y coordinates and the state of Shift, Ctrl and Alt.","scope":"Control","type":"ui","priority":"2"},"mousebuttonup":{"id":"mousebuttonup","title":"MouseButtonUp","description":"Releasing a mouse button. Follows the [onMouseButtonDown](about:blank#onMouseButtonDown) event.","args":"Returns the control, the pressed button, the x and y coordinates and the state of Shift, Ctrl and Alt.","scope":"Control","type":"ui","priority":"2"},"mousebuttonclick":{"id":"mousebuttonclick","title":"MouseButtonClick","description":"Pressing and releasing a mouse button.","args":"Returns the control, the pressed button, the x and y coordinates and the state of Shift, Ctrl and Alt.","scope":"ListBox, ComboBox, TextBox, Button, ActiveText","type":"ui","priority":"2"},"mousebuttondblclick":{"id":"mousebuttondblclick","title":"MouseButtonDblClick","description":"Pressing and releasing a mouse button twice within very short time.","args":"Returns the control, the pressed button, the x and y coordinates and the state of Shift, Ctrl and Alt.","scope":"Control","type":"ui","priority":"2"},"mousemoving":{"id":"mousemoving","title":"MouseMoving","description":"Fires continuously while moving the mouse with a certain interval.","args":"Returns the control, the  and mouseOver. If the controls parent is its display then x and y will be the same as [getMousePosition](/wiki/getMousePosition) else it will be relative to its parent control for instance if inside a [controlsGroup](/wiki/DialogControls-ControlsGroup),","scope":"Control","type":"ui","priority":"2"},"mouseholding":{"id":"mouseholding","title":"MouseHolding","description":"Fires continuously while mouse is not moving with a certain interval.","args":"Returns the control, the x and y coordinates and mouseOver. If used with a display, the mouseOver parameter is excluded.","scope":"Control","type":"ui","priority":"2"},"mousezchanged":{"id":"mousezchanged","title":"MouseZChanged","description":"Fires when mouse wheel position is changed. Does not fire on disabled control. Checked with CT_EDIT type in v1.50.","args":"Returns the display or control and the change of the scrollwheel.","scope":"Display, Control","type":"ui","priority":"2"},"candestroy":{"id":"candestroy","title":"CanDestroy","description":"Ask this control if dialog can be closed (used for validation of contained data).","args":"Returns the control and exit code.","scope":"Control","type":"ui","priority":"3"},"destroy":{"id":"destroy","title":"Destroy","description":"Destroying control","args":"Returns the control and exit code.","scope":"Control","type":"ui","priority":"3"},"buttonclick":{"id":"buttonclick","title":"ButtonClick","description":"The attached button action is performed. When returned value is [true](/wiki/true), button's display remains opened.","args":"Returns control.","scope":"Button","type":"ui","priority":"1"},"buttondblclick":{"id":"buttondblclick","title":"ButtonDblClick","description":"?","args":"Arma 3","scope":"Button","type":"ui","priority":"?"},"buttondown":{"id":"buttondown","title":"ButtonDown","description":"The left mouse button is pressed over the button area or a key on the keyboard is pressed.","args":"Returns control.","scope":"Button","type":"ui","priority":"1"},"buttonup":{"id":"buttonup","title":"ButtonUp","description":"The left mouse buttons is released outside the button area and the attached button action is not performed.","args":"Returns control.","scope":"Button","type":"ui","priority":"1"},"lbselchanged":{"id":"lbselchanged","title":"LBSelChanged","description":"The selection in a listbox is changed. The left mouse button has been released and the new selection is fully made.","args":"Returns the control and the selected element index.","scope":"Listbox,Combobox","type":"ui","priority":"2"},"lblistselchanged":{"id":"lblistselchanged","title":"LBListSelChanged","description":"Selection in XCombo box changed (but value is not stored yet).","args":"Returns the control and the selected element index.","scope":"Listbox","type":"ui","priority":"2"},"lbdblclick":{"id":"lbdblclick","title":"LBDblClick","description":"Double click on some row in listbox.","args":"Returns the control and the selected element index.","scope":"Listbox","type":"ui","priority":"2"},"lbdrag":{"id":"lbdrag","title":"LBDrag","description":"Drag & drop operation started.","args":"Returns the control and the selected element index.","scope":"Listbox","type":"ui","priority":"2"},"lbdragging":{"id":"lbdragging","title":"LBDragging","description":"Drag & drop operation is in progress.","args":"Returns the control and the x and y coordinates.","scope":"Listbox","type":"ui","priority":"2"},"lbdrop":{"id":"lbdrop","title":"LBDrop","description":"Drag & drop operation finished.","args":"Returns the control and the x and y coordinates.When the Listbox is inside a ctrlGroup the eventhandler need to be added to the ctrlGroup","scope":"Listbox, Combobox, Textbox, ActiveText, Button","type":"ui","priority":"2"},"treeselchanged":{"id":"treeselchanged","title":"TreeSelChanged","description":"Changing the selection in a tree.","args":"Returns the control and the new selection path.","scope":"Tree","type":"ui","priority":"2"},"treelbuttondown":{"id":"treelbuttondown","title":"TreeLButtonDown","description":"Pressing and releasing left mouse button on a tree.","args":"Returns the control.","scope":"Tree","type":"ui","priority":"2"},"treedblclick":{"id":"treedblclick","title":"TreeDblClick","description":"Pressing and releasing twice on a tree entry.","args":"Returns the control and the current selection path.","scope":"Tree","type":"ui","priority":"2"},"treeexpanded":{"id":"treeexpanded","title":"TreeExpanded","description":"The tree folder structure has been expanded.","args":"Returns the control.","scope":"Tree","type":"ui","priority":"3"},"treecollapsed":{"id":"treecollapsed","title":"TreeCollapsed","description":"The tree folder structure has been collapsed.","args":"Returns the control.","scope":"Tree","type":"ui","priority":"3"},"treemousemove":{"id":"treemousemove","title":"TreeMouseMove","description":"Fires continuously while moving the mouse with a certain interval.","args":"Returns the control.","scope":"Tree","type":"ui","priority":"2"},"treemousehold":{"id":"treemousehold","title":"TreeMouseHold","description":"Fires continuously while mouse is not moving with a certain interval.","args":"Returns the control.","scope":"Tree","type":"ui","priority":"2"},"treemouseexit":{"id":"treemouseexit","title":"TreeMouseExit","description":"The mouse pointer exits the tree control area","args":"Returns the control.","scope":"Tree","type":"ui","priority":"2"},"toolboxselchanged":{"id":"toolboxselchanged","title":"ToolBoxSelChanged","description":"Changed the selection in a toolbox.","args":"Returns the control and the selected element index.","scope":"Toolbox","type":"ui","priority":"2"},"checked":{"id":"checked","title":"Checked","description":"CheckBox checked","args":"Arma 3","scope":"Checkbox","type":"ui","priority":"?"},"checkedchanged":{"id":"checkedchanged","title":"CheckedChanged","description":"Checked state of CheckBox changed.","args":"Arma 3. Returns control and the checked state (0 or 1, not boolean).","scope":"Checkbox","type":"ui","priority":"?"},"checkboxesselchanged":{"id":"checkboxesselchanged","title":"CheckBoxesSelChanged","description":"Changed the selection in a checkbox.","args":"Returns the control, the selected element index and the current state.","scope":"Checkbox","type":"ui","priority":"2"},"htmllink":{"id":"htmllink","title":"HTMLLink","description":"Pressing and releasing a HTML link.","args":"Returns the control and href.","scope":"HTML","type":"ui","priority":"2"},"sliderposchanged":{"id":"sliderposchanged","title":"SliderPosChanged","description":"Changing the position of a slider.","args":"Returns the control and the change.","scope":"Slider","type":"ui","priority":"2"},"objectmoved":{"id":"objectmoved","title":"ObjectMoved","description":"Moving an object.","args":"Returns the control and the offset on the x, y and z axes.","scope":"Object","type":"ui","priority":"2"},"menuselected":{"id":"menuselected","title":"MenuSelected","description":"Some item in context menu (used now only in new mission editor) was selected.","args":"Returns the control and the command id.","scope":"Context menu","type":"ui","priority":"2"},"draw":{"id":"draw","title":"Draw","description":"Fires when the map is drawn (can occur more than once per second).","args":"Returns the map control.","scope":"Map","type":"ui","priority":"?"},"videostopped":{"id":"videostopped","title":"VideoStopped","description":"Activated every time video ends (when looped, handler is executed after every finished loop).","args":"Returns the control","scope":"Control","type":"ui","priority":"2"},"animchanged":{"id":"AnimChanged","title":"AnimChanged","description":"Triggered every time a new animation is started. This EH is only triggered for the 1st animation state in a sequence. It can be assigned to a remote unit but will only fire on the PC where the actual [addEventHandler](/wiki/addEventHandler) command was executed.","args":"* unit: [Object](/wiki/Object) - Object the event handler is assigned to\n* anim: [String](/wiki/String) - Name of the anim that is started","type":"units"},"animdone":{"id":"AnimDone","title":"AnimDone","description":"Triggered every time an animation is finished. Triggered for all animation states in a sequence. It can be assigned to a remote unit but will only fire on the PC where the actual [addEventHandler](/wiki/addEventHandler) command was executed.","args":"* unit: [Object](/wiki/Object) - Object the event handler is assigned to\n* anim: [String](/wiki/String) - Name of the anim that has been finished","type":"units"},"animstatechanged":{"id":"AnimStateChanged","title":"AnimStateChanged","description":"Triggered every time an animation state changes. Triggered for all animation states in a sequence. It can be assigned to a remote unit but will only fire on the PC where the actual [addEventHandler](/wiki/addEventHandler) command was executed.","args":"* unit: [Object](/wiki/Object) - Object the event handler is assigned to\n* anim: [String](/wiki/String) - Name of the anim that has been started","type":"units"},"containerclosed":{"id":"ContainerClosed","title":"ContainerClosed","description":"Triggers when player finished accessing cargo container. This event handler is similar to \"InventoryClosed\" EH, but needs to be assigned to the container rather than the player. Note: will trigger only for the unit opening container.","args":"* container: [Object](/wiki/Object) - Cargo container.\n* player: [Object](/wiki/Object) - Unit who accessed the container.","type":"units"},"containeropened":{"id":"ContainerOpened","title":"ContainerOpened","description":"Triggers when cargo container is accessed by player. This event handler is similar to \"InventoryOpened\" EH, but needs to be assigned to the container rather than the player and cannot be overridden. Note: will trigger only for the unit opening container..","args":"* container: [Object](/wiki/Object) - Cargo container.\n* player: [Object](/wiki/Object) - Unit who accessed the container.","type":"units"},"controlsshifted":{"id":"ControlsShifted","title":"ControlsShifted","description":"Triggers when controls of vehicle are shifted (pilot->co-pilot, co-pilot->pilot). Works for both, \"Take\" and \"Release\" controls actions. Event only triggers on PC where vehicle is [local](/wiki/local) and EH was added.\n\n\n\n\n* If helicopter is [local](/wiki/local) to the server and co-pilot takes controls, the helicopter changes locality to co-pilot PC. This means that if \"ControlsShifted\" EH was added on both server and client, \"Take Controls\" action will trigger EH on the server PC, but subsequent co-pilot \"Release Controls\" action will trigger it on co-pilot's PC.","args":"* vehicle: [Object](/wiki/Object) - Vehicle which controls were shifted.\n* newController: [Object](/wiki/Object) - Unit who controls vehicle after this event.\n* oldController: [Object](/wiki/Object) - Unit who controled vehicle before this event.","type":"units"},"dammaged":{"id":"Dammaged","title":"Dammaged","description":"Triggered when the unit is damaged. In ArmA works with all vehicles not only men like in OFP. It can be assigned to a remote vehicle but will only fire on the PC where the actual [addEventHandler](/wiki/addEventHandler) command was executed.\n\n\n\n\n* If simultaneous damage occured (e.g. via grenade) EH might be triggered several times.\n* The Dammaged EH will not necessarily fire if only minor damage occurred (e.g. firing a bullet at a tank), even though the damage increased.","args":"* unit: [Object](/wiki/Object) - Object the event handler is assigned to\n* hitSelection: [String](/wiki/String) - Name of the selection where the unit was damaged\n* damage: [Number](/wiki/Number) - Resulting level of damage\n\n\n\n\n\n* hitPartIndex: [Number](/wiki/Number) - hit index of the hit selection\n* hitPoint: [String](/wiki/String) - hit point Cfg name\n\n\n\n\n\n* shooter: [Object](/wiki/Object) - shooter reference (to get instigator use [getShotParents](/wiki/getShotParents) on projectile)\n* projectile: [Object](/wiki/Object) - the projectile that caused damage","type":"units"},"deleted":{"id":"Deleted","title":"Deleted","description":"Triggered just before the assigned entity is deleted.","args":"* entity: [Object](/wiki/Object) - Object the event handler is assigned to","type":"units"},"engine":{"id":"Engine","title":"Engine","description":"Triggered when the engine of the unit is turned on/off.","args":"* vehicle: [Object](/wiki/Object) - Vehicle the event handler is assigned to\n* engineState: [Boolean](/wiki/Boolean) - True when the engine is turned on, false when turned off","type":"units"},"epecontact":{"id":"EpeContact","title":"EpeContact","description":"Triggered when object collision (PhysX) is in progress. It can be assigned to a remote vehicle but will only fire on the PC where the actual [addEventHandler](/wiki/addEventHandler) command was executed.","args":"* object1: [Object](/wiki/Object) - Object with attached handler.\n* object2: [Object](/wiki/Object) - Object which is colliding with object1.\n* select1: [String](/wiki/String) - Selection of object1 which is colliding - not in use at this moment, empty string is always returned.\n* select2: [String](/wiki/String) - Selection of object2 which is colliding - not in use at this moment, empty string is always returned.\n* force: [Number](/wiki/Number) - Force of collision.","type":"units"},"epecontactend":{"id":"EpeContactEnd","title":"EpeContactEnd","description":"Triggered when object collision (PhysX) ends. It can be assigned to a remote vehicle but will only fire on the PC where the actual [addEventHandler](/wiki/addEventHandler) command was executed.","args":"* object1: [Object](/wiki/Object) - Object with attached handler.\n* object2: [Object](/wiki/Object) - Object which is colliding with object1.\n* select1: [String](/wiki/String) - Selection of object1 which is colliding - not in use at this moment, empty string is always returned.\n* select2: [String](/wiki/String) - Selection of object2 which is colliding - not in use at this moment, empty string is always returned.\n* force: [Number](/wiki/Number) - Force of collision.","type":"units"},"epecontactstart":{"id":"EpeContactStart","title":"EpeContactStart","description":"Triggered when object collision (PhysX) starts. It can be assigned to a remote vehicle but will only fire on the PC where the actual [addEventHandler](/wiki/addEventHandler) command was executed.","args":"* object1: [Object](/wiki/Object) - Object with attached handler.\n* object2: [Object](/wiki/Object) - Object which is colliding with object1.\n* select1: [String](/wiki/String) - Selection of object1 which is colliding - not in use at this moment, empty string is always returned.\n* select2: [String](/wiki/String) - Selection of object2 which is colliding - not in use at this moment, empty string is always returned.\n* force: [Number](/wiki/Number) - Force of collision.","type":"units"},"explosion":{"id":"Explosion","title":"Explosion","description":"Triggered when a vehicle or unit is damaged by a nearby explosion. It can be assigned to a remote unit or vehicle but will only fire on the PC where EH is added and explosion is local, i.e. it really needs to be added on every PC and JIP and will fire only where the explosion is originated.","args":"* vehicle: [Object](/wiki/Object) - Object the event handler is assigned to\n* damage: [Number](/wiki/Number) - Damage inflicted to the object","type":"units"},"fired":{"id":"Fired","title":"Fired","description":"Triggered when the unit fires a weapon.\nThis EH will not trigger if a unit fires out of a vehicle. For those cases an EH has to be attached to that particular vehicle. When \"Manual Fire\" is used, the  is [objNull](/wiki/objNull) if gunner is not present or the  is not the one who fires. To check if \"Manual Fire\"  is on, use [isManualFire](/wiki/isManualFire). The actual shot instigator could be retrieved with [getShotParents](/wiki/getShotParents) command.","args":"* unit: [Object](/wiki/Object) - Object the event handler is assigned to\n* weapon: [String](/wiki/String) - Fired weapon\n* muzzle: [String](/wiki/String) - Muzzle that was used\n* mode: [String](/wiki/String) - Current mode of the fired weapon\n* ammo: [String](/wiki/String) - Ammo used\n* magazine: [String](/wiki/String) -  magazine name which was used\n\n\n\n\n\n* projectile: [Object](/wiki/Object) - Object of the projectile that was shot out\n\n\n\n\n\n* gunner: [Object](/wiki/Object) - gunner whose weapons are firing.","type":"units"},"firedman":{"id":"FiredMan","title":"FiredMan","description":"Triggered when the unit fires a weapon. This EH must be attached to a soldier and unlike with \"Fired\" EH, it will fire regardless of whether the soldier is on foot or firing vehicle weapon. For [remoteControled](/wiki/remoteControl) unit use \"Fired\" EH instead.","args":"* unit: [Object](/wiki/Object) - Unit the event handler is assigned to (the instigator)\n* weapon: [String](/wiki/String) - Fired weapon\n* muzzle: [String](/wiki/String) - Muzzle that was used\n* mode: [String](/wiki/String) - Current mode of the fired weapon\n* ammo: [String](/wiki/String) - Ammo used\n* magazine: [String](/wiki/String) -  magazine name which was used\n* projectile: [Object](/wiki/Object) - Object of the projectile that was shot out\n* vehicle: [Object](/wiki/Object) - Vehicle, if weapon is vehicle weapon, otherwise [objNull](/wiki/objNull)","type":"units"},"firednear":{"id":"FiredNear","title":"FiredNear","description":"Triggered when a weapon is fired somewhere  the unit or vehicle. It is also triggered if the unit itself is firing. (Exception(s): the Throw weapon wont broadcast the FiredNear event). When \"Manual Fire\" is used, the  is [objNull](/wiki/objNull) if gunner is not present or the  is not the one who fires. To check if \"Manual Fire\"  is on, use [isManualFire](/wiki/isManualFire). The actual shot instigator could be retrieved with [getShotParents](/wiki/getShotParents) command.\n\n Works with thrown weapons.","args":"* unit: [Object](/wiki/Object) - Object the event handler is assigned to\n* vehicle: [Object](/wiki/Object) - Object which fires a weapon near the unit\n* distance: [Number](/wiki/Number) - Distance in meters between the  and  (max. distance ~69m)\n* weapon: [String](/wiki/String) - Fired weapon\n* muzzle: [String](/wiki/String) - Muzzle that was used\n* mode: [String](/wiki/String) - Current mode of the fired weapon\n* ammo: [String](/wiki/String) - Ammo used\n\n\n\n\n\n* gunner: [Object](/wiki/Object) - gunner, whose weapons are fired","type":"units"},"fuel":{"id":"Fuel","title":"Fuel","description":"Triggered when the unit's fuel status changes between completely empty / not empty (only useful if the event handler is assigned to a vehicle).","args":"* vehicle: [Object](/wiki/Object) - Vehicle the event handler is assigned to\n* fuelState: [Boolean](/wiki/Boolean) - 0 when no fuel, 1 when the fuel tank is full","type":"units"},"gear":{"id":"Gear","title":"Gear","description":"Triggered when the unit lowers/retracts the landing gear (only useful if the event handler is assigned to is a member of the class \"Plane\"). Also triggered for helicopters in landing mode, regardless if they have or don't have retractable gear.","args":"* vehicle: [Object](/wiki/Object) - Vehicle the event handler is assigned to\n* gearState: [Boolean](/wiki/Boolean) - True when the gear is lowered, false when retracted","type":"units"},"getin":{"id":"GetIn","title":"GetIn","description":"Triggers when a unit enters a vehicle. It can be assigned to a remote vehicle but will only fire on the PC where the actual [addEventHandler](/wiki/addEventHandler) command was executed. This EH is triggered by moveInXXXX commands and \"GetInXXXX\" [actions](/wiki/action), but not upon a seat change within the same vehicle.\n\nIn vehicles with multi-turret setup, entering any turret will show \"gunner\" for position.","args":"* vehicle: [Object](/wiki/Object) - Vehicle the event handler is assigned to\n* position: [String](/wiki/String) - Can be either \"driver\", \"gunner\" or \"cargo\"\n* unit: [Object](/wiki/Object) - Unit that entered the vehicle\n\n\n\n\n\n* turret: [Array](/wiki/Array) - turret path","type":"units"},"getinman":{"id":"GetInMan","title":"GetInMan","description":"Triggers when a unit enters a vehicle. Similar to \"GetIn\" but must be assigned to a unit and not vehicle. Persistent on respawn if assigned where unit was [local](/wiki/local). This EH is triggered by moveInXXXX commands and \"GetInXXXX\" [actions](/wiki/action).","args":"* unit: [Object](/wiki/Object) - Unit the event handler is assigned to\n* position: [String](/wiki/String) - Can be either \"driver\", \"gunner\" or \"cargo\"\n* vehicle: [Object](/wiki/Object) - Vehicle the unit entered\n* turret: [Array](/wiki/Array) - turret path","type":"units"},"getout":{"id":"GetOut","title":"GetOut","description":"Triggers when a unit gets out from a vehicle. It can be assigned to a remote vehicle but will only fire on the PC where the actual [addEventHandler](/wiki/addEventHandler) command was executed. This EH is triggered by [moveOut](/wiki/moveOut), \"GetOut\" & \"Eject\" [actions](/wiki/action), if an [alive](/wiki/alive) [crew](/wiki/crew) member disconnects or is deleted, but not upon a seat change within the same vehicle.","args":"* vehicle: [Object](/wiki/Object) - Vehicle the event handler is assigned to\n* position: [String](/wiki/String) - Can be either \"driver\", \"gunner\" or \"cargo\"\n* unit: [Object](/wiki/Object) - Unit that left the vehicle\n* turret: [Array](/wiki/Array) - turret path (since Arma 3 v1.36)","type":"units"},"getoutman":{"id":"GetOutMan","title":"GetOutMan","description":"Triggers when a unit exits a vehicle. Similar to \"GetOut\" but must be assigned to a unit and not vehicle. Persistent on respawn if assigned where unit was [local](/wiki/local). This EH is triggered by [moveOut](/wiki/moveOut) and \"GetOut\" & \"Eject\" [actions](/wiki/action).","args":"* unit: [Object](/wiki/Object) - unit the event handler is assigned to\n* position: [String](/wiki/String) - Can be either \"driver\", \"gunner\" or \"cargo\"\n* vehicle: [Object](/wiki/Object) - Vehicle that the unit left\n* turret: [Array](/wiki/Array) - turret path","type":"units"},"handledamage":{"id":"HandleDamage","title":"HandleDamage","description":"Triggers when the unit is damaged and fires for each damaged selection separately (Note: Currently, in Arma 3 v1.70 it triggers for every selection of a vehicle, no matter if the section was damaged or not). Works with all vehicles. This EH can accept a remote unit as argument however it will only fire when the unit is [local](/wiki/local) to the PC this event handler was added on. For example, you can add this event handler to one particular vehicle on every PC. When this vehicle gets hit, only EH on PC where the vehicle is currently [local](/wiki/local) will fire.\n\nIf code provided returns a numeric value, this value will overwrite the default damage of given selection after processing. Return value of 0 will make the unit invulnerable if damage is not scripted in other ways (i.e using [setDamage](/wiki/setDamage) and/or [setHit](/wiki/setHit) for additional damage handling). If no value is returned, the default damage processing will be done. This allows for safe stacking of this event handler. Only the return value of the last added \"HandleDamage\" EH is considered.\n\n\n\n\n* Multiple \"HandleDamage\" event handlers can be added to the same unit. If multiple EHs return damage value for custom damage handling, only last returned value will be considered by the engine. EHs that do not return value can be safely added after EHs that do return value.\n* You can save the last event as timestamp ([diag_tickTime](/wiki/diag_tickTime)) onto the unit, as well as the current health of the unit/its selections, with [setVariable](/wiki/setVariable) and query it on each \"HandleDamage\" event with [getVariable](/wiki/getVariable) to define a system how to handle the \"HandleDamage\" event.\n* \"HandleDamage\" will continue to trigger even if the unit is already dead.\n* \"HandleDamage\" is persistent. If you add it to the [player](/wiki/player) object, it will continue to exist after player respawned.\n* \"HandleDamage\" can trigger \"twice\" per damage event. Once for direct damage, once for indirect damage (explosive damage). This can happen even in the same frame, but is unlikely.\n\n\nAdditional [Celery's explanation (Updated by ShadowRanger for Arma 3)](https://forums.bistudio.com/forums/topic/205515-handledamage-event-handler-explained/).","args":"* unit: [Object](/wiki/Object) - Object the event handler is assigned to.\n* hitSelection: [String](/wiki/String) - Name of the selection where the unit was damaged. \"\" for over-all structural damage, \"?\" for unknown selections.\n* damage: [Number](/wiki/Number) - Resulting level of damage for the selection.\n* source: [Object](/wiki/Object) - The source unit that caused the damage.\n* projectile: [String](/wiki/String) - Classname of the projectile that caused inflicted the damage. (\"\" for unknown, such as falling damage.)\n\n\n\n\n\n* hitPartIndex: [Number](/wiki/Number) - Hit part index of the hit point, -1 otherwise.\n\n\n\n\n\n* instigator: [Object](/wiki/Object) - Person who pulled the trigger\n\n\n\n\n\n* hitPoint: [String](/wiki/String) - hit point Cfg name","type":"units"},"handleheal":{"id":"HandleHeal","title":"HandleHeal","description":"Triggered when unit starts to heal (player using heal action or AI heals after being ordered). Triggers only on PC where EH is added and unit is [local](/wiki/local). If code returns false, engine side healing follows. Return true if you handle healing in script, use [AISFinishHeal](/wiki/AISFinishHeal) to tell engine that script side healing is done. See also [lifeState](/wiki/lifeState) and [setUnconscious](/wiki/setUnconscious) commands.: This Event Handler is broken but somewhat usable. When attached to a unit it will fire when medic action is started (not finished!) on the unit. _this [select](/wiki/select) 0 will be the unit itself, _this [select](/wiki/select) 1 will be the healer. The 3rd param will always be [false](/wiki/false) and neither returning [true](/wiki/true) nor using [AISFinishHeal](/wiki/AISFinishHeal) will have any effect on engine's default healing behaviour. If unit walks away from the healer during healing action, the heal will not finish but there is no way of detecting this within \"handleheal\" framework.\nThis code will fix unit to 100% health after self-use of medpack:","args":"* unit: [Object](/wiki/Object)\n* healer: [Object](/wiki/Object)\n* healercanheal: [Boolean](/wiki/Boolean) - true when healer is corpsman","type":"units"},"handlerating":{"id":"HandleRating","title":"HandleRating","description":"Triggered when engine adds rating to overall rating of the unit, usually after a kill or a friendly kill. If EH code returns [Number](/wiki/Number), this will override default engine behaviour and the resulting value added will be the one returned by EH code.","args":"* unit: [Object](/wiki/Object) - Object the event handler is assigned to\n* rating: [Number](/wiki/Number) - rating to be added","type":"units"},"handlescore":{"id":"HandleScore","title":"HandleScore","description":"Triggered when engine adds score to overall score of the unit, usually after a kill. If the EH code returns [true](/wiki/true) or [Nothing](/wiki/Nothing), the default engine score is applied, if it returns [false](/wiki/false), the engine score doesn't get added. For remote units like players, the event does not persist after respawn, and must be re-added to the new unit.  MP only, server only.","args":"* unit: [Object](/wiki/Object) - Object the event handler is assigned to\n* object: [Object](/wiki/Object) - object for which score was awarded\n* score: [Number](/wiki/Number) - score to be added","type":"units"},"hit":{"id":"Hit","title":"Hit","description":"Triggered when the unit is hit/damaged.\n\nIs  always triggered when unit is killed by a hit.Most of the time only the [killed](/wiki/ArmA:_Event_Handlers#Killed) event handler is triggered when a unit dies from a hit.The hit EH will not necessarily fire if only minor damage occurred (e.g. firing a bullet at a tank), even though the damage increased.Does not fire when a unit is set to allowDamage false.","args":"* unit: [Object](/wiki/Object) - Object the event handler is assigned to\n* causedBy: [Object](/wiki/Object) - Object that caused the damage.Contains the unit itself in case of collisions.\n* damage: [Number](/wiki/Number) - Level of damage caused by the hit\n\n\n\n\n\n* instigator: [Object](/wiki/Object) - Person who pulled the trigger","type":"units"},"hitpart":{"id":"HitPart","title":"HitPart","description":"Runs when the object it was added to gets injured/damaged. It returns the position and component that was hit on the object within a nested array, this is because the model may have more than one selection name for the hit component (i.e. a single piece of geometry can be simultaneously part of multiple, overlapping named selections).\n\nWhile you can add \"HitPart\" handler to a remote unit, the respectful [addEventHandler](/wiki/addEventHandler) command must be executed on the shooter's PC and will only fire on shooter's PC as well. The event will not fire if the shooter is not local, even if the target itself is local. Additionally, if the unit gets damaged by any means other than shooter's shooting, \"HitPart\" will not fire. Because of this, this event handler is most suitable for when the shooter needs feedback on his shooting, such as target practicing or hitmarker creation.\n\n\n\n\n* The hit values from the ammo array are derived from the projectile's [CfgAmmo](/wiki/CfgAmmo_Config_Reference) class, and do not match the actual damage inflicted, which is usually lower due to armor and other factors.\n* This EH returns array of sub-arrays [[...],[...],...[...]]. Each sub-array contains data for the part that was hit as usually multiple parts are hit at the same time (see [HitPart_Sample](/wiki/HitPart_Sample)). The structure of each sub-array is listed on the right ->","args":"* target: [Object](/wiki/Object) - Object that got injured/damaged.\n* shooter: [Object](/wiki/Object) - Unit or vehicle that inflicted the damage. If injured by a vehicle impact or a fall the target itself is returned, or, in case of explosions, the [null object](/wiki/objNull). In case of explosives that were planted by someone (e.g. satchel charges), that unit is returned.\n* bullet: [Object](/wiki/Object) - Object that was fired.\n* position: [Position3D](/wiki/Position3D) - Position the bullet impacted (ASL).\n* velocity: [Vector3D](/wiki/Vector3D) - 3D speed at which bullet impacted.\n* selection: [Array](/wiki/Array) - Array of [Strings](/wiki/String) with named selection of the object that were hit.\n* ammo: [Array](/wiki/Array) - Ammo info: [hit value, indirect hit value, indirect hit range, explosive damage, ammo class name] OR, if there is no shot object: [impulse value on object collided with,0,0,0]\n* direction: [Vector3D](/wiki/Vector3D) - vector that is orthogonal (perpendicular) to the surface struck. For example, if a wall was hit, vector would be pointing out of the wall at a 90 degree angle.\n* radius: [Number](/wiki/Number) - Radius (size) of component hit.\n* surface: [String](/wiki/String) - Surface type struck.\n* direct: [Boolean](/wiki/Boolean) - [true](/wiki/true) if object was directly hit, [false](/wiki/false) if it was hit by indirect/splash damage.","type":"units"},"init":{"id":"Init","title":"Init","description":"Triggered whenever an entity is created. Cannot be used in scripts, only inside class Eventhandlers in config.","args":"* unit: [Object](/wiki/Object) - Object the event handler is assigned to","type":"units"},"handleidentity":{"id":"HandleIdentity","title":"HandleIdentity","description":"Triggered whenever an entity is created. Can be used in scripts if EH is added immediately after unit is created in [unscheduled environment](/wiki/Scheduler#Unscheduled_Environment). If EH scope returns [true](/wiki/true), the default engine identity application is overridden.","args":"* unit: [Object](/wiki/Object) - Object the event handler is assigned to","type":"units"},"incomingmissile":{"id":"IncomingMissile","title":"IncomingMissile","description":"Triggered when a guided missile locked on the target or unguided missile or rocket aimed by AI at the target was fired.","args":"* target: [Object](/wiki/Object) - Object the event handler is assigned to\n* ammo: [String](/wiki/String) - Ammo type that was fired on the target\n\n\n\n\n\n* vehicle: [Object](/wiki/Object) - Vehicle that fired the weapon. In case of soldier, unit is returned\n\n\n\n\n\n* instigator: [Object](/wiki/Object) - Person who pulled the trigger","type":"units"},"inventoryclosed":{"id":"InventoryClosed","title":"InventoryClosed","description":"Triggered when unit closes inventory.","args":"* unit: [Object](/wiki/Object) - Object the event handler is assigned to\n* targetContainer: [Object](/wiki/Object) - connected container or weaponholder","type":"units"},"inventoryopened":{"id":"InventoryOpened","title":"InventoryOpened","description":"Triggered when unit opens inventory. End EH main scope with [true](/wiki/true) to override the opening of the inventory in case you wish to handle it yourself:\n\nTo return all nearby containers use [nearSupplies](/wiki/nearSupplies) command.","args":"* unit: [Object](/wiki/Object) - Object the event handler is assigned to\n* targetContainer: [Object](/wiki/Object) - connected container or weaponholder\n\n\n\n\n\n* secondaryContainer: [Object](/wiki/Object) - second connected container or weaponholder or [objNull](/wiki/objNull)","type":"units"},"killed":{"id":"Killed","title":"Killed","description":"Triggered when the unit is killed.\n\nBe careful when the killer has been a vehicle. For most cases the reference of the vehicle is the same as the [effectiveCommander](/wiki/effectiveCommander), but not always.","args":"* unit: [Object](/wiki/Object) - Object the event handler is assigned to\n* killer: [Object](/wiki/Object) - Object that killed the unit. Contains the unit itself in case of collisions\n\n\n\n\n\n* instigator: [Object](/wiki/Object) - Person who pulled the trigger\n\n\n\n\n\n* useEffects: [Boolean](/wiki/Boolean) - same as  in [setDamage](/wiki/setDamage) alt syntax","type":"units"},"landedtouchdown":{"id":"LandedTouchDown","title":"LandedTouchDown","description":"Triggered when a plane (AI or player) touches the ground.","args":"* plane: [Object](/wiki/Object) - Object the event handler is assigned to\n* airportID: [Number](/wiki/Number) - ID of the airport (-1 for anything else)","type":"units"},"landedstopped":{"id":"LandedStopped","title":"LandedStopped","description":"Triggered when an AI pilot would get out usually. Not executed for player.","args":"* plane: [Object](/wiki/Object) - Object the event handler is assigned to\n* airportID: [Number](/wiki/Number) - ID of the airport (-1 for anything else)","type":"units"},"landing":{"id":"Landing","title":"Landing","description":"Triggered when an AI pilot (or auto-pilot) is preparing for landing. The exact moment of triggering coincides with lowering of the gear (\"Gear\" EH)","args":"* plane: [Object](/wiki/Object) - Object the event handler is assigned to\n* airportID: [Number](/wiki/Number) or [Object](/wiki/Object) - ID of the airport or aircraft carrier object\n* isCarrier: [Boolean](/wiki/Boolean) - true if landing on aircraft carrier","type":"units"},"landingcanceled":{"id":"LandingCanceled","title":"LandingCanceled","description":"Triggered when AI pilot landing is cancelled (for example new order received to land elsewhere). The exact moment of triggering coincides with retracting of the gear (\"Gear\" EH). : Doesn't trigger if player switches off auto-pilot. Canceled is spelled with one L","args":"* plane: [Object](/wiki/Object) - Object the event handler is assigned to\n* airportID: [Number](/wiki/Number) or [Object](/wiki/Object) - ID of the airport or aircraft carrier object (-1 no airport)\n* isCarrier: [Boolean](/wiki/Boolean) - true if landing on aircraft carrier","type":"units"},"local":{"id":"Local","title":"Local","description":"Triggers when locality of object in MP is changed. The event handler only triggers on the computers that are directly involved in change of locality. So if EH is added to every computer on network, it will only trigger on 2 computers, on the computer that receives ownership of the object (new owner), in which case [_this](/wiki/this) [select](/wiki/select) 1 will be [true](/wiki/true), and on the computer from which ownership is transferred (old owner), in which case [_this](/wiki/this) [select](/wiki/select) 1 will be [false](/wiki/false).","args":"* object: [Object](/wiki/Object) - The object that changed locality.\n* local: [Boolean](/wiki/Boolean) - If the object is local on given computer.","type":"units"},"postreset":{"id":"PostReset","title":"PostReset","description":"Triggers after PP effects have been reset by the engine","args":"","type":"units"},"put":{"id":"Put","title":"Put","description":"Triggers when a unit puts an item in a container.","args":"* unit:  [Object](/wiki/Object) - Unit to which the event handler is assigned\n* container:  [Object](/wiki/Object) - The container into which the item was placed (vehicle, box, etc.)\n* item: [String](/wiki/String) - The class name of the moved item","type":"units"},"reloaded":{"id":"Reloaded","title":"Reloaded","description":"Triggers when a weapon is reloaded with a new magazine. For more information see: [Reloaded](/wiki/Arma_3:_Event_Handlers/Reloaded)","args":"* entity: [Object](/wiki/Object) - unit or vehicle to which EH is assigned\n* weapon: [String](/wiki/String) - weapon that got reloaded\n* muzzle: [String](/wiki/String) - weapon's muzzle that got reloaded\n* newMagazine: [Array](/wiki/Array) - new magazine info\n* oldMagazine: [Array](/wiki/Array) or [Nothing](/wiki/Nothing) - old magazine info","type":"units"},"respawn":{"id":"Respawn","title":"Respawn","description":"Triggered when a unit respawns.","args":"* unit: [Object](/wiki/Object) - Object the event handler is assigned to\n* corpse: [Object](/wiki/Object) - Object the event handler was assigned to, aka the corpse/unit player was previously controlling","type":"units"},"ropeattach":{"id":"RopeAttach","title":"RopeAttach","description":"Triggered when a rope is attached to an object.\nIn the case of sling loading, this event handler must be assigned to the helicopter and will trigger for each attached rope.","args":"* object 1: [Object](/wiki/Object) - Object to which the event handler is assigned.\n* rope: [Object](/wiki/Object) - The rope being attached between object 1 and object 2.\n* object 2: [Object](/wiki/Object) - The object that is being attached to object 1 via rope.","type":"units"},"ropebreak":{"id":"RopeBreak","title":"RopeBreak","description":"Triggered when a rope is detached from an object.\nIn the case of sling loading, this event handler must be assigned to the helicopter and will trigger for each detached rope.","args":"* object 1: [Object](/wiki/Object) - Object to which the event handler is assigned.\n* rope: [Object](/wiki/Object) - The rope being detached between object 1 and object 2.\n* object 2: [Object](/wiki/Object) - The object that is being detached from object 1 via rope.","type":"units"},"seatswitched":{"id":"SeatSwitched","title":"SeatSwitched","description":"Triggered when unit changes seat within vehicle. EH returns both units switching seats. If switching seats with an empty seat, one of the returned units will be [objNull](/wiki/objNull). The new position can be obtained with [assignedVehicleRole](/wiki/assignedVehicleRole) <unit>. This EH must be assigned to a vehicle.","args":"* vehicle: [Object](/wiki/Object) - Vehicle to which the event handler is assigned.\n* unit1: [Object](/wiki/Object) - Unit switching seat.\n* unit2: [Object](/wiki/Object) - Unit switching seat.","type":"units"},"seatswitchedman":{"id":"SeatSwitchedMan","title":"SeatSwitchedMan","description":"Triggered when unit changes seat within vehicle. EH returns both units switching seats. If switching seats with an empty seat, one of the returned units will be [objNull](/wiki/objNull). The new position can be obtained with [assignedVehicleRole](/wiki/assignedVehicleRole) <unit>. This EH must be assigned to a unit and not a vehicle. This EH is persistent and will be transferred to the new unit after respawn, but only if it was assigned where unit was local.","args":"* unit1: [Object](/wiki/Object) - Unit switching seat.\n* unit2: [Object](/wiki/Object) - Unit with which unit1 is switching seat.\n* vehicle: [Object](/wiki/Object) - Vehicle where switching seats is taking place.","type":"units"},"soundplayed":{"id":"SoundPlayed","title":"SoundPlayed","description":"Triggered when player is making noises when injured or fatigued for example. The number param passed to the EH code, points to the sound origin:\n\n\n* 1 : Breath\n* 2 : Breath Injured\n* 3 : Breath Scuba\n* 4 : Injured\n* 5 : Pulsation\n* 6 : Hit Scream\n* 7 : Burning\n* 8 : Drowning\n* 9 : Drown\n* 10 : Gasping\n* 11 : Stabilizing\n* 12 : Healing\n* 13 : Healing With Medikit\n* 14 : Recovered","args":"* unit:  [Object](/wiki/Object) - Unit to which the event handler is assigned\n* sound code:  [Number](/wiki/Number) - sound origin","type":"units"},"take":{"id":"Take","title":"Take","description":"Triggers when a unit takes an item from a container.","args":"* unit:  [Object](/wiki/Object) - Unit to which the event handler is assigned\n* container:  [Object](/wiki/Object) - The container from which the item was taken (vehicle, box, etc.)\n* item: [String](/wiki/String) - The class name of the taken item","type":"units"},"tasksetascurrent":{"id":"TaskSetAsCurrent","title":"TaskSetAsCurrent","description":"Triggers when player's current task changes","args":"* unit:  [Object](/wiki/Object) - The player to whom the event handler is assigned\n* task:  [Task](/wiki/Task) - The new current task","type":"units"},"turnin":{"id":"TurnIn","title":"TurnIn","description":"Triggers when member of crew in a vehicle uses Turn In [action](/wiki/action)","args":"* vehicle:  [Object](/wiki/Object) - The vehicle the event handler is assigned to\n* unit:  [Object](/wiki/Object) - The unit performing the Turn In action\n* turret:  [Array](/wiki/Array) - Turret path","type":"units"},"turnout":{"id":"TurnOut","title":"TurnOut","description":"Triggers when member of crew in a vehicle uses Turn Out [action](/wiki/action)","args":"* vehicle:  [Object](/wiki/Object) - The vehicle the event handler is assigned to\n* unit:  [Object](/wiki/Object) - The unit performing the Turn Out action\n* turret:  [Array](/wiki/Array) - Turret path","type":"units"},"weaponassembled":{"id":"WeaponAssembled","title":"WeaponAssembled","description":"Triggers when weapon gets assembled. EH should be attached to the unit and not the weapon.","args":"* unit: [Object](/wiki/Object) - Object the event handler is assigned to\n* weapon: [Object](/wiki/Object) - Object of the assembled weapon","type":"units"},"weapondisassembled":{"id":"WeaponDisassembled","title":"WeaponDisassembled","description":"Triggers when weapon gets disassembled. EH should be attached to the unit and not the weapon. As of Arma 3 v1.32, this event does not fire if the weapon is not local. See [http://feedback.arma3.com/view.php?id=21308](http://feedback.arma3.com/view.php?id=21308)","args":"* unit:  [Object](/wiki/Object) - Object the event handler is assigned to\n* primaryBag:  [Object](/wiki/Object) - First backpack object which was weapon disassembled into\n* secondarybag: [Object](/wiki/Object) - Second backpack object which was weapon disassembled into","type":"units"},"weapondeployed":{"id":"WeaponDeployed","title":"WeaponDeployed","description":"Triggers when the deployed state of a weapon or bipod changes. Note: A weapon cannot be rested and deployed at the same time.","args":"* unit:  [Object](/wiki/Object) - Object the event handler is assigned to\n* isDeployed:  [Boolean](/wiki/Boolean) - true if deployed","type":"units"},"weaponrested":{"id":"WeaponRested","title":"WeaponRested","description":"Triggers when weapon rested state changes (weapon near a surface that can provide weapon support). Note: A weapon cannot be rested and deployed at the same time.","args":"* unit:  [Object](/wiki/Object) - Object the event handler is assigned to\n* isRested:  [Boolean](/wiki/Boolean) - true if rested","type":"units"},"curatorfeedbackmessage":{"id":"CuratorFeedbackMessage","title":"CuratorFeedbackMessage","description":"Triggered when curator attempts invalid action in curator interface.\n\nEach error has its own unique ID, recognized values are:\n\n\n* 003 - when trying to teleport camera outside of [curatorCameraArea](/wiki/curatorCameraArea)\n* 101 - trying to place an object when placing is disabled using [setCuratorCoef](/wiki/setCuratorCoef) \"place\"\n* 102 - trying to place an object which is too expensive (cost set in  multiplied by [setCuratorCoef](/wiki/setCuratorCoef) \"place\" is larger than [curatorPoints](/wiki/curatorPoints))\n* 103 - trying to place an object outside of [curatorEditingArea](/wiki/curatorEditingArea)\n* 201 - trying to place a waypoint when waypoint placing is disabled\n* 202 - trying to place a waypoint which is too expensive (cost set by [setCuratorWaypointCost](/wiki/setCuratorWaypointCost) multiplied by [setCuratorCoef](/wiki/setCuratorCoef) \"place\" is larger than [curatorPoints](/wiki/curatorPoints))\n* 206 - trying to place a waypoint when no AI unit is selected\n* 301 - trying to move or rotate an entity when editing is disabled using [setCuratorCoef](/wiki/setCuratorCoef) \"edit\"\n* 302 - trying to move or rotate an entity when it's too expensive (entity cost multiplied by [setCuratorCoef](/wiki/setCuratorCoef) \"edit\" is larger than [curatorPoints](/wiki/curatorPoints))\n* 303 - trying to move an entity outside of [curatorEditingArea](/wiki/curatorEditingArea)\n* 304 - trying to move or rotate an entity which is outside of [curatorEditingArea](/wiki/curatorEditingArea)\n* 307 - trying to move or rotate a player (players cannot be manipulated with)\n* 401 - trying to delete an entity when deleting is disabled using [setCuratorCoef](/wiki/setCuratorCoef) \"delete\"\n* 402 - trying to delete an entity which is too expensive (cost multiplied by [setCuratorCoef](/wiki/setCuratorCoef) \"delete\" is larger than [curatorPoints](/wiki/curatorPoints))\n* 404 - trying to delete an entity which is outside of [curatorEditingArea](/wiki/curatorEditingArea)\n* 405 - trying to delete an entity which has [non-editable](/wiki/curatorEditableObjects) crew in it\n* 407 - trying to delete a player (players cannot be manipulated with)\n* 501 - trying to destroy an object when destroying is disabled using [setCuratorCoef](/wiki/setCuratorCoef) \"destroy\"\n* 502 - trying to destroy an object which is too expensive (cost multiplied by [setCuratorCoef](/wiki/setCuratorCoef) \"destroy\" is larger than [curatorPoints](/wiki/curatorPoints))\n* 504 - trying to destroy an object which is outside of [curatorEditingArea](/wiki/curatorEditingArea)\n* 505 - trying to destroy an object which has [non-editable](/wiki/curatorEditableObjects) crew in it\n* 506 - trying to destroy an object when no object is selected\n* 507 - trying to destroy a player (players cannot be manipulated with)","args":"* curator: [Object](/wiki/Object)\n* errorID: [Number](/wiki/Number)","type":"units"},"curatorgroupdoubleclicked":{"id":"CuratorGroupDoubleClicked","title":"CuratorGroupDoubleClicked","description":"Triggered when a group is double-clicked on in curator interface.","args":"* curator: [Object](/wiki/Object)\n* entity: [Group](/wiki/Group)","type":"units"},"curatorgroupplaced":{"id":"CuratorGroupPlaced","title":"CuratorGroupPlaced","description":"Triggered when new group is placed in curator interface.","args":"* curator: [Object](/wiki/Object)\n* entity: [Group](/wiki/Group)","type":"units"},"curatorgroupselectionchanged":{"id":"CuratorGroupSelectionChanged","title":"CuratorGroupSelectionChanged","description":"Triggered when a group is selected in curator interface.","args":"* curator: [Object](/wiki/Object)\n* entity: [Group](/wiki/Group)","type":"units"},"curatormarkerdeleted":{"id":"CuratorMarkerDeleted","title":"CuratorMarkerDeleted","description":"Triggered when a marker is deleted in curator interface.","args":"* curator: [Object](/wiki/Object)\n* entity: [String](/wiki/String)","type":"units"},"curatormarkerdoubleclicked":{"id":"CuratorMarkerDoubleClicked","title":"CuratorMarkerDoubleClicked","description":"Triggered when a marker is double-clicked on in curator interface.","args":"* curator: [Object](/wiki/Object)\n* entity: [String](/wiki/String)","type":"units"},"curatormarkeredited":{"id":"CuratorMarkerEdited","title":"CuratorMarkerEdited","description":"Triggered when a marker is moved in curator interface.","args":"* curator: [Object](/wiki/Object)\n* entity: [String](/wiki/String)","type":"units"},"curatormarkerplaced":{"id":"CuratorMarkerPlaced","title":"CuratorMarkerPlaced","description":"Triggered when new marker is placed in curator interface.","args":"* curator: [Object](/wiki/Object)\n* entity: [String](/wiki/String)","type":"units"},"curatormarkerselectionchanged":{"id":"CuratorMarkerSelectionChanged","title":"CuratorMarkerSelectionChanged","description":"Triggered when a marker is selected in curator interface.","args":"* curator: [Object](/wiki/Object)\n* entity: [String](/wiki/String)","type":"units"},"curatorobjectdeleted":{"id":"CuratorObjectDeleted","title":"CuratorObjectDeleted","description":"Triggered when an object is deleted in curator interface.","args":"* curator: [Object](/wiki/Object)\n* entity: [Object](/wiki/Object)","type":"units"},"curatorobjectdoubleclicked":{"id":"CuratorObjectDoubleClicked","title":"CuratorObjectDoubleClicked","description":"Triggered when an object is double-clicked on in curator interface.","args":"* curator: [Object](/wiki/Object)\n* entity: [Object](/wiki/Object)","type":"units"},"curatorobjectedited":{"id":"CuratorObjectEdited","title":"CuratorObjectEdited","description":"Triggered when an object is moved or rotated in curator interface.","args":"* curator: [Object](/wiki/Object)\n* entity: [Object](/wiki/Object)","type":"units"},"curatorobjectplaced":{"id":"CuratorObjectPlaced","title":"CuratorObjectPlaced","description":"Triggered when new object is placed in curator interface. This event handler will trigger individually for each unit in a placed group - excluding the crew in vehicles.","args":"* curator: [Object](/wiki/Object)\n* entity: [Object](/wiki/Object)","type":"units"},"curatorobjectregistered":{"id":"CuratorObjectRegistered","title":"CuratorObjectRegistered","description":"Triggered when player enters curator interface. Assign curator cost to every object in the game. This is the primary method that a mission designer can use to limit the objects a curator can place.","args":"* curator: [Object](/wiki/Object)\n* input: [Array](/wiki/Array) of [Strings](/wiki/String) - all CfgVehicles classes","type":"units"},"curatorobjectselectionchanged":{"id":"CuratorObjectSelectionChanged","title":"CuratorObjectSelectionChanged","description":"Triggered when an object is selected in curator interface.","args":"* curator: [Object](/wiki/Object)\n* entity: [Object](/wiki/Object)","type":"units"},"curatorpinged":{"id":"CuratorPinged","title":"CuratorPinged","description":"Triggered when a player pings his curator(s) by pressing  key. To add player to specific curator, use [addCuratorEditableObjects](/wiki/addCuratorEditableObjects) command.","args":"* curator: [Object](/wiki/Object)\n* player: [Object](/wiki/Object)","type":"units"},"curatorwaypointdeleted":{"id":"CuratorWaypointDeleted","title":"CuratorWaypointDeleted","description":"Triggered when a waypoint is deleted in curator interface.","args":"* curator: [Object](/wiki/Object)\n* entity: [Array](/wiki/Array)","type":"units"},"curatorwaypointdoubleclicked":{"id":"CuratorWaypointDoubleClicked","title":"CuratorWaypointDoubleClicked","description":"Triggered when a waypoint is double-clicked on in curator interface.","args":"* curator: [Object](/wiki/Object)\n* entity: [Array](/wiki/Array)","type":"units"},"curatorwaypointedited":{"id":"CuratorWaypointEdited","title":"CuratorWaypointEdited","description":"Triggered when a waypoint is moved in curator interface.","args":"* curator: [Object](/wiki/Object)\n* entity: [Array](/wiki/Array)","type":"units"},"curatorwaypointplaced":{"id":"CuratorWaypointPlaced","title":"CuratorWaypointPlaced","description":"Triggered when new waypoint is placed in curator interface.","args":"* curator: [Object](/wiki/Object)\n* Group: [Group](/wiki/Group)\n* Waypoint Index: [Number](/wiki/Number)","type":"units"},"curatorwaypointselectionchanged":{"id":"CuratorWaypointSelectionChanged","title":"CuratorWaypointSelectionChanged","description":"Triggered when a waypoint is selected in curator interface.","args":"* curator: [Object](/wiki/Object)\n* entity: [Array](/wiki/Array)","type":"units"},"mphit":{"id":"MPHit","title":"MPHit","description":"Triggered when the unit is hit/damaged. EH can be added on any machine and EH code will trigger globally on every connected client and server. This EH is clever enough to be triggered globally only once even if added on all clients or a single client that is then disconnected, EH will still trigger globally only once.\n\nIs  always triggered when unit is killed by a hit. Most of the time only the [Killed](/wiki/ArmA_3:_Event_Handlers#Killed) event handler is triggered when a unit dies from a hit. The hit EH will not necessarily fire if only minor damage occurred (e.g. firing a bullet at a tank), even though the damage increased. Can also trigger several times for an explosion (direct and indirect damage). Does not fire when a unit is set to [allowDamage](/wiki/allowDamage) [false](/wiki/false). However it will fire with \"HandleDamage\" EH added alongside stopping unit from taking damage [addEventHandler](/wiki/addEventHandler) [\"HandleDamage\",{0}]; Will not trigger when unit is dead.\n\nThis EH must be used in conjunction with the [addMPEventHandler](/wiki/addMPEventHandler) command.\n\nNote: Call a function from the MPHit EH code space, rather to define the full code in there directly. The reason is the code space will be transferred over network on each event activation - so keep the data as small as possible!","args":"* unit: [Object](/wiki/Object) - Object the event handler is assigned to\n* causedBy: [Object](/wiki/Object) - Object that caused the damage. Contains the unit itself in case of collisions.\n* damage: [Number](/wiki/Number) - Level of damage caused by the hit\n\n\n\n\n\n* instigator: [Object](/wiki/Object) - Person who pulled the trigger","type":"units"},"mpkilled":{"id":"MPKilled","title":"MPKilled","description":"Triggered when the unit is killed. EH can be added on any machine and EH code will trigger globally on every connected client and server. This EH is clever enough to be triggered globally only once even if added on all clients or a single client that is then disconnected, EH will still trigger globally only once.\n\nThis EH must be used in conjunction with the [addMPEventHandler](/wiki/addMPEventHandler) command.","args":"* unit: [Object](/wiki/Object) - Object the event handler is assigned to\n* killer: [Object](/wiki/Object) - Object that killed the unitContains the unit itself in case of collisions\n\n\n\n\n\n* instigator: [Object](/wiki/Object) - Person who pulled the trigger\n\n\n\n\n\n* useEffects: [Boolean](/wiki/Boolean) - same as  in [setDamage](/wiki/setDamage) alt syntax","type":"units"},"mprespawn":{"id":"MPRespawn","title":"MPRespawn","description":"Triggered when a unit, it is assigned to, respawns. This EH does not work as one would expect MP EH should work like. It is only triggered on one machine where the unit it was assigned to is [local](/wiki/local). The only difference between  and  is that  can be assigned from anywhere while  requires the unit to be local. This EH must be used in conjunction with the [addMPEventHandler](/wiki/addMPEventHandler) command.\n\nMPRespawn EH expects the EH code to return array in format of [Position](/wiki/Position), which will be used to place respawned unit at desired coordinates. For example:  will place player at [1234,1234,0] immediately on respawn.","args":"* unit: [Object](/wiki/Object) - Object the event handler is assigned to\n* corpse: [Object](/wiki/Object) - Object the event handler was assigned to, aka the corpse/unit player was previously controlling.","type":"units"},"musicstart":{"id":"MusicStart","title":"MusicStart","description":"Triggers when [CfgMusic](/wiki/Description.ext#cfgMusic) sound starts playing, after being executed with [playMusic](/wiki/playMusic) command.\n\nThis event handler needs to be added with [addMusicEventHandler](/wiki/addMusicEventHandler) command and removed with [removeMusicEventHandler](/wiki/removeMusicEventHandler).","args":"* className:  [String](/wiki/String) - [CfgMusic](/wiki/Description.ext#Music) class name of currently playing sound.\n* handlerID:  [Number](/wiki/Number) - EH id returned by [addMusicEventHandler](/wiki/addMusicEventHandler).","type":"units"},"musicstop":{"id":"MusicStop","title":"MusicStop","description":"Triggers when [CfgMusic](/wiki/Description.ext#cfgMusic) sound finished  playing, after being executed with [playMusic](/wiki/playMusic) command. Note that EH will not be triggered if you force stop the music with [playMusic](/wiki/playMusic) \"\".\n\nThis event handler needs to be added with [addMusicEventHandler](/wiki/addMusicEventHandler) command and removed with [removeMusicEventHandler](/wiki/removeMusicEventHandler).","args":"* className:  [String](/wiki/String) - [CfgMusic](/wiki/Description.ext#Music) class name of currently played sound.\n* handlerID:  [Number](/wiki/Number) - EH id returned by [addMusicEventHandler](/wiki/addMusicEventHandler).","type":"units"}}